
RXmicrocontroller.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         0000000a  00800100  000006bc  00000750  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         000006bc  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          00000015  0080010a  0080010a  0000075a  2**0
                  ALLOC
  3 .comment      00000030  00000000  00000000  0000075a  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  0000078c  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 00000070  00000000  00000000  000007cc  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   00000b34  00000000  00000000  0000083c  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 000007ca  00000000  00000000  00001370  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   0000047b  00000000  00000000  00001b3a  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  000001b8  00000000  00000000  00001fb8  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    00000495  00000000  00000000  00002170  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    00000839  00000000  00000000  00002605  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000060  00000000  00000000  00002e3e  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 34 00 	jmp	0x68	; 0x68 <__ctors_end>
   4:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
   8:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
   c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  10:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  14:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  18:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  1c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  20:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  24:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  28:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  2c:	0c 94 c3 00 	jmp	0x186	; 0x186 <__vector_11>
  30:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  34:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  38:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  3c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  40:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  44:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  48:	0c 94 28 01 	jmp	0x250	; 0x250 <__vector_18>
  4c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  50:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  54:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  58:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  5c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  60:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  64:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>

00000068 <__ctors_end>:
  68:	11 24       	eor	r1, r1
  6a:	1f be       	out	0x3f, r1	; 63
  6c:	cf ef       	ldi	r28, 0xFF	; 255
  6e:	d8 e0       	ldi	r29, 0x08	; 8
  70:	de bf       	out	0x3e, r29	; 62
  72:	cd bf       	out	0x3d, r28	; 61

00000074 <__do_copy_data>:
  74:	11 e0       	ldi	r17, 0x01	; 1
  76:	a0 e0       	ldi	r26, 0x00	; 0
  78:	b1 e0       	ldi	r27, 0x01	; 1
  7a:	ec eb       	ldi	r30, 0xBC	; 188
  7c:	f6 e0       	ldi	r31, 0x06	; 6
  7e:	02 c0       	rjmp	.+4      	; 0x84 <__do_copy_data+0x10>
  80:	05 90       	lpm	r0, Z+
  82:	0d 92       	st	X+, r0
  84:	aa 30       	cpi	r26, 0x0A	; 10
  86:	b1 07       	cpc	r27, r17
  88:	d9 f7       	brne	.-10     	; 0x80 <__do_copy_data+0xc>

0000008a <__do_clear_bss>:
  8a:	21 e0       	ldi	r18, 0x01	; 1
  8c:	aa e0       	ldi	r26, 0x0A	; 10
  8e:	b1 e0       	ldi	r27, 0x01	; 1
  90:	01 c0       	rjmp	.+2      	; 0x94 <.do_clear_bss_start>

00000092 <.do_clear_bss_loop>:
  92:	1d 92       	st	X+, r1

00000094 <.do_clear_bss_start>:
  94:	af 31       	cpi	r26, 0x1F	; 31
  96:	b2 07       	cpc	r27, r18
  98:	e1 f7       	brne	.-8      	; 0x92 <.do_clear_bss_loop>
  9a:	0e 94 b3 00 	call	0x166	; 0x166 <main>
  9e:	0c 94 5c 03 	jmp	0x6b8	; 0x6b8 <_exit>

000000a2 <__bad_interrupt>:
  a2:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

000000a6 <setupRX>:
void setmotors(){
	for(int i=0;i<sizeof(motoranglesvalues);i++){
		writeangle(i, motoranglesvalues[i]);
		_delay_ms(10);
	}
}
  a6:	10 92 c5 00 	sts	0x00C5, r1	; 0x8000c5 <__TEXT_REGION_LENGTH__+0x7f80c5>
  aa:	80 e1       	ldi	r24, 0x10	; 16
  ac:	80 93 c4 00 	sts	0x00C4, r24	; 0x8000c4 <__TEXT_REGION_LENGTH__+0x7f80c4>
  b0:	80 e9       	ldi	r24, 0x90	; 144
  b2:	80 93 c1 00 	sts	0x00C1, r24	; 0x8000c1 <__TEXT_REGION_LENGTH__+0x7f80c1>
  b6:	86 e2       	ldi	r24, 0x26	; 38
  b8:	80 93 c2 00 	sts	0x00C2, r24	; 0x8000c2 <__TEXT_REGION_LENGTH__+0x7f80c2>
  bc:	08 95       	ret

000000be <initServo>:
  be:	84 b1       	in	r24, 0x04	; 4
  c0:	8f ef       	ldi	r24, 0xFF	; 255
  c2:	84 b9       	out	0x04, r24	; 4
  c4:	80 91 84 00 	lds	r24, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7f8084>
  c8:	90 91 85 00 	lds	r25, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7f8085>
  cc:	80 5c       	subi	r24, 0xC0	; 192
  ce:	99 4f       	sbci	r25, 0xF9	; 249
  d0:	90 93 89 00 	sts	0x0089, r25	; 0x800089 <__TEXT_REGION_LENGTH__+0x7f8089>
  d4:	80 93 88 00 	sts	0x0088, r24	; 0x800088 <__TEXT_REGION_LENGTH__+0x7f8088>
  d8:	81 e0       	ldi	r24, 0x01	; 1
  da:	80 93 81 00 	sts	0x0081, r24	; 0x800081 <__TEXT_REGION_LENGTH__+0x7f8081>
  de:	ef e6       	ldi	r30, 0x6F	; 111
  e0:	f0 e0       	ldi	r31, 0x00	; 0
  e2:	80 81       	ld	r24, Z
  e4:	82 60       	ori	r24, 0x02	; 2
  e6:	80 83       	st	Z, r24
  e8:	08 95       	ret

000000ea <writepotval>:
  ea:	cf 93       	push	r28
  ec:	df 93       	push	r29
  ee:	f8 94       	cli
  f0:	c8 2f       	mov	r28, r24
  f2:	d0 e0       	ldi	r29, 0x00	; 0
  f4:	70 e0       	ldi	r23, 0x00	; 0
  f6:	80 e0       	ldi	r24, 0x00	; 0
  f8:	90 e0       	ldi	r25, 0x00	; 0
  fa:	0e 94 63 02 	call	0x4c6	; 0x4c6 <__floatsisf>
  fe:	20 e0       	ldi	r18, 0x00	; 0
 100:	30 e0       	ldi	r19, 0x00	; 0
 102:	4a e7       	ldi	r20, 0x7A	; 122
 104:	56 e4       	ldi	r21, 0x46	; 70
 106:	0e 94 ef 02 	call	0x5de	; 0x5de <__mulsf3>
 10a:	20 e0       	ldi	r18, 0x00	; 0
 10c:	30 e0       	ldi	r19, 0x00	; 0
 10e:	4f e7       	ldi	r20, 0x7F	; 127
 110:	53 e4       	ldi	r21, 0x43	; 67
 112:	0e 94 c0 01 	call	0x380	; 0x380 <__divsf3>
 116:	20 e0       	ldi	r18, 0x00	; 0
 118:	30 e0       	ldi	r19, 0x00	; 0
 11a:	4a e7       	ldi	r20, 0x7A	; 122
 11c:	56 e4       	ldi	r21, 0x46	; 70
 11e:	0e 94 54 01 	call	0x2a8	; 0x2a8 <__addsf3>
 122:	0e 94 32 02 	call	0x464	; 0x464 <__fixunssfsi>
 126:	c1 5f       	subi	r28, 0xF1	; 241
 128:	de 4f       	sbci	r29, 0xFE	; 254
 12a:	68 83       	st	Y, r22
 12c:	78 94       	sei
 12e:	df 91       	pop	r29
 130:	cf 91       	pop	r28
 132:	08 95       	ret

00000134 <setmotorspot>:

void setmotorspot(){
 134:	0f 93       	push	r16
 136:	1f 93       	push	r17
 138:	cf 93       	push	r28
 13a:	07 e1       	ldi	r16, 0x17	; 23
 13c:	11 e0       	ldi	r17, 0x01	; 1
 13e:	c0 e0       	ldi	r28, 0x00	; 0
	for(int i=0;i<NumberofMotors;i++){
		writepotval(i, motoranglesvalues[i]);
 140:	f8 01       	movw	r30, r16
 142:	61 91       	ld	r22, Z+
 144:	8f 01       	movw	r16, r30
 146:	8c 2f       	mov	r24, r28
 148:	0e 94 75 00 	call	0xea	; 0xea <writepotval>
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
 14c:	8f e9       	ldi	r24, 0x9F	; 159
 14e:	9f e0       	ldi	r25, 0x0F	; 15
 150:	01 97       	sbiw	r24, 0x01	; 1
 152:	f1 f7       	brne	.-4      	; 0x150 <setmotorspot+0x1c>
 154:	00 c0       	rjmp	.+0      	; 0x156 <setmotorspot+0x22>
 156:	00 00       	nop
 158:	cf 5f       	subi	r28, 0xFF	; 255
		_delay_ms(10);
	}
}

void setmotorspot(){
	for(int i=0;i<NumberofMotors;i++){
 15a:	c8 30       	cpi	r28, 0x08	; 8
 15c:	89 f7       	brne	.-30     	; 0x140 <setmotorspot+0xc>
		writepotval(i, motoranglesvalues[i]);
		_delay_ms(1);
	}
}
 15e:	cf 91       	pop	r28
 160:	1f 91       	pop	r17
 162:	0f 91       	pop	r16
 164:	08 95       	ret

00000166 <main>:




int main(void)
{
 166:	e7 e1       	ldi	r30, 0x17	; 23
 168:	f1 e0       	ldi	r31, 0x01	; 1
 16a:	8f e1       	ldi	r24, 0x1F	; 31
 16c:	91 e0       	ldi	r25, 0x01	; 1
	
for(int i=0;i<NumberofMotors;i++){
	motoranglesvalues[i]=0;
 16e:	11 92       	st	Z+, r1


int main(void)
{
	
for(int i=0;i<NumberofMotors;i++){
 170:	e8 17       	cp	r30, r24
 172:	f9 07       	cpc	r31, r25
 174:	e1 f7       	brne	.-8      	; 0x16e <main+0x8>
	motoranglesvalues[i]=0;
	}	
	//setup Reciever
	setupRX();		
 176:	0e 94 53 00 	call	0xa6	; 0xa6 <setupRX>
	initServo();
 17a:	0e 94 5f 00 	call	0xbe	; 0xbe <initServo>
	sei();
 17e:	78 94       	sei
	
	while(1) {
	setmotorspot();
 180:	0e 94 9a 00 	call	0x134	; 0x134 <setmotorspot>
 184:	fd cf       	rjmp	.-6      	; 0x180 <main+0x1a>

00000186 <__vector_11>:




ISR(TIMER1_COMPA_vect)
	{
 186:	1f 92       	push	r1
 188:	0f 92       	push	r0
 18a:	0f b6       	in	r0, 0x3f	; 63
 18c:	0f 92       	push	r0
 18e:	11 24       	eor	r1, r1
 190:	2f 93       	push	r18
 192:	3f 93       	push	r19
 194:	4f 93       	push	r20
 196:	5f 93       	push	r21
 198:	8f 93       	push	r24
 19a:	9f 93       	push	r25
 19c:	ef 93       	push	r30
 19e:	ff 93       	push	r31
		static uint16_t nextStart;
		static uint8_t servo;
		static int outputHigh = 1;
		uint16_t currentTime = OCR1A;
 1a0:	20 91 88 00 	lds	r18, 0x0088	; 0x800088 <__TEXT_REGION_LENGTH__+0x7f8088>
 1a4:	30 91 89 00 	lds	r19, 0x0089	; 0x800089 <__TEXT_REGION_LENGTH__+0x7f8089>
		uint8_t mask = servoOutMask[servo];
 1a8:	e0 91 0c 01 	lds	r30, 0x010C	; 0x80010c <servo.1800>
 1ac:	f0 e0       	ldi	r31, 0x00	; 0
 1ae:	ee 5f       	subi	r30, 0xFE	; 254
 1b0:	fe 4f       	sbci	r31, 0xFE	; 254
 1b2:	80 81       	ld	r24, Z
		
		if (outputHigh) {
 1b4:	40 91 00 01 	lds	r20, 0x0100	; 0x800100 <__DATA_REGION_ORIGIN__>
 1b8:	50 91 01 01 	lds	r21, 0x0101	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
 1bc:	45 2b       	or	r20, r21
 1be:	b9 f0       	breq	.+46     	; 0x1ee <__vector_11+0x68>
			SERVO_PORT |= mask;
 1c0:	95 b1       	in	r25, 0x05	; 5
 1c2:	89 2b       	or	r24, r25
 1c4:	85 b9       	out	0x05, r24	; 5
			// Set the end time for the servo pulse
			OCR1A = currentTime + servoTicks[servo];
 1c6:	e0 91 0c 01 	lds	r30, 0x010C	; 0x80010c <servo.1800>
 1ca:	f0 e0       	ldi	r31, 0x00	; 0
 1cc:	e1 5f       	subi	r30, 0xF1	; 241
 1ce:	fe 4f       	sbci	r31, 0xFE	; 254
 1d0:	80 81       	ld	r24, Z
 1d2:	a9 01       	movw	r20, r18
 1d4:	48 0f       	add	r20, r24
 1d6:	51 1d       	adc	r21, r1
 1d8:	50 93 89 00 	sts	0x0089, r21	; 0x800089 <__TEXT_REGION_LENGTH__+0x7f8089>
 1dc:	40 93 88 00 	sts	0x0088, r20	; 0x800088 <__TEXT_REGION_LENGTH__+0x7f8088>
			nextStart = currentTime +US2TIMER1(SERVO_TIME_DIV);
 1e0:	20 5c       	subi	r18, 0xC0	; 192
 1e2:	33 46       	sbci	r19, 0x63	; 99
 1e4:	30 93 0b 01 	sts	0x010B, r19	; 0x80010b <__data_end+0x1>
 1e8:	20 93 0a 01 	sts	0x010A, r18	; 0x80010a <__data_end>
 1ec:	16 c0       	rjmp	.+44     	; 0x21a <__vector_11+0x94>
			} else {
			SERVO_PORT &= ~mask;
 1ee:	95 b1       	in	r25, 0x05	; 5
 1f0:	80 95       	com	r24
 1f2:	89 23       	and	r24, r25
 1f4:	85 b9       	out	0x05, r24	; 5
			if (++servo == N_SERVOS) {
 1f6:	80 91 0c 01 	lds	r24, 0x010C	; 0x80010c <servo.1800>
 1fa:	8f 5f       	subi	r24, 0xFF	; 255
 1fc:	88 30       	cpi	r24, 0x08	; 8
 1fe:	19 f0       	breq	.+6      	; 0x206 <__vector_11+0x80>
 200:	80 93 0c 01 	sts	0x010C, r24	; 0x80010c <servo.1800>
 204:	02 c0       	rjmp	.+4      	; 0x20a <__vector_11+0x84>
				servo = 0;
 206:	10 92 0c 01 	sts	0x010C, r1	; 0x80010c <servo.1800>
			}
			OCR1A = nextStart;
 20a:	80 91 0a 01 	lds	r24, 0x010A	; 0x80010a <__data_end>
 20e:	90 91 0b 01 	lds	r25, 0x010B	; 0x80010b <__data_end+0x1>
 212:	90 93 89 00 	sts	0x0089, r25	; 0x800089 <__TEXT_REGION_LENGTH__+0x7f8089>
 216:	80 93 88 00 	sts	0x0088, r24	; 0x800088 <__TEXT_REGION_LENGTH__+0x7f8088>
		}
		outputHigh = !outputHigh;
 21a:	81 e0       	ldi	r24, 0x01	; 1
 21c:	90 e0       	ldi	r25, 0x00	; 0
 21e:	20 91 00 01 	lds	r18, 0x0100	; 0x800100 <__DATA_REGION_ORIGIN__>
 222:	30 91 01 01 	lds	r19, 0x0101	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
 226:	23 2b       	or	r18, r19
 228:	11 f0       	breq	.+4      	; 0x22e <__vector_11+0xa8>
 22a:	80 e0       	ldi	r24, 0x00	; 0
 22c:	90 e0       	ldi	r25, 0x00	; 0
 22e:	90 93 01 01 	sts	0x0101, r25	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
 232:	80 93 00 01 	sts	0x0100, r24	; 0x800100 <__DATA_REGION_ORIGIN__>
	}
 236:	ff 91       	pop	r31
 238:	ef 91       	pop	r30
 23a:	9f 91       	pop	r25
 23c:	8f 91       	pop	r24
 23e:	5f 91       	pop	r21
 240:	4f 91       	pop	r20
 242:	3f 91       	pop	r19
 244:	2f 91       	pop	r18
 246:	0f 90       	pop	r0
 248:	0f be       	out	0x3f, r0	; 63
 24a:	0f 90       	pop	r0
 24c:	1f 90       	pop	r1
 24e:	18 95       	reti

00000250 <__vector_18>:


ISR(USART_RX_vect)
{
 250:	1f 92       	push	r1
 252:	0f 92       	push	r0
 254:	0f b6       	in	r0, 0x3f	; 63
 256:	0f 92       	push	r0
 258:	11 24       	eor	r1, r1
 25a:	2f 93       	push	r18
 25c:	8f 93       	push	r24
 25e:	9f 93       	push	r25
 260:	ef 93       	push	r30
 262:	ff 93       	push	r31
	motoranglesvalues[idC]=UDR0;
 264:	80 91 0d 01 	lds	r24, 0x010D	; 0x80010d <idC>
 268:	90 91 0e 01 	lds	r25, 0x010E	; 0x80010e <idC+0x1>
 26c:	20 91 c6 00 	lds	r18, 0x00C6	; 0x8000c6 <__TEXT_REGION_LENGTH__+0x7f80c6>
 270:	fc 01       	movw	r30, r24
 272:	e9 5e       	subi	r30, 0xE9	; 233
 274:	fe 4f       	sbci	r31, 0xFE	; 254
 276:	20 83       	st	Z, r18
	if(idC>=(NumberofMotors-1))
 278:	87 30       	cpi	r24, 0x07	; 7
 27a:	91 05       	cpc	r25, r1
 27c:	2c f0       	brlt	.+10     	; 0x288 <__vector_18+0x38>
	{
		idC=0;
 27e:	10 92 0e 01 	sts	0x010E, r1	; 0x80010e <idC+0x1>
 282:	10 92 0d 01 	sts	0x010D, r1	; 0x80010d <idC>
 286:	05 c0       	rjmp	.+10     	; 0x292 <__vector_18+0x42>
	}
	else
	{
		idC++;
 288:	01 96       	adiw	r24, 0x01	; 1
 28a:	90 93 0e 01 	sts	0x010E, r25	; 0x80010e <idC+0x1>
 28e:	80 93 0d 01 	sts	0x010D, r24	; 0x80010d <idC>
	}

}
 292:	ff 91       	pop	r31
 294:	ef 91       	pop	r30
 296:	9f 91       	pop	r25
 298:	8f 91       	pop	r24
 29a:	2f 91       	pop	r18
 29c:	0f 90       	pop	r0
 29e:	0f be       	out	0x3f, r0	; 63
 2a0:	0f 90       	pop	r0
 2a2:	1f 90       	pop	r1
 2a4:	18 95       	reti

000002a6 <__subsf3>:
 2a6:	50 58       	subi	r21, 0x80	; 128

000002a8 <__addsf3>:
 2a8:	bb 27       	eor	r27, r27
 2aa:	aa 27       	eor	r26, r26
 2ac:	0e 94 6b 01 	call	0x2d6	; 0x2d6 <__addsf3x>
 2b0:	0c 94 b5 02 	jmp	0x56a	; 0x56a <__fp_round>
 2b4:	0e 94 a7 02 	call	0x54e	; 0x54e <__fp_pscA>
 2b8:	38 f0       	brcs	.+14     	; 0x2c8 <__addsf3+0x20>
 2ba:	0e 94 ae 02 	call	0x55c	; 0x55c <__fp_pscB>
 2be:	20 f0       	brcs	.+8      	; 0x2c8 <__addsf3+0x20>
 2c0:	39 f4       	brne	.+14     	; 0x2d0 <__addsf3+0x28>
 2c2:	9f 3f       	cpi	r25, 0xFF	; 255
 2c4:	19 f4       	brne	.+6      	; 0x2cc <__addsf3+0x24>
 2c6:	26 f4       	brtc	.+8      	; 0x2d0 <__addsf3+0x28>
 2c8:	0c 94 a4 02 	jmp	0x548	; 0x548 <__fp_nan>
 2cc:	0e f4       	brtc	.+2      	; 0x2d0 <__addsf3+0x28>
 2ce:	e0 95       	com	r30
 2d0:	e7 fb       	bst	r30, 7
 2d2:	0c 94 9e 02 	jmp	0x53c	; 0x53c <__fp_inf>

000002d6 <__addsf3x>:
 2d6:	e9 2f       	mov	r30, r25
 2d8:	0e 94 c6 02 	call	0x58c	; 0x58c <__fp_split3>
 2dc:	58 f3       	brcs	.-42     	; 0x2b4 <__addsf3+0xc>
 2de:	ba 17       	cp	r27, r26
 2e0:	62 07       	cpc	r22, r18
 2e2:	73 07       	cpc	r23, r19
 2e4:	84 07       	cpc	r24, r20
 2e6:	95 07       	cpc	r25, r21
 2e8:	20 f0       	brcs	.+8      	; 0x2f2 <__addsf3x+0x1c>
 2ea:	79 f4       	brne	.+30     	; 0x30a <__addsf3x+0x34>
 2ec:	a6 f5       	brtc	.+104    	; 0x356 <__addsf3x+0x80>
 2ee:	0c 94 e8 02 	jmp	0x5d0	; 0x5d0 <__fp_zero>
 2f2:	0e f4       	brtc	.+2      	; 0x2f6 <__addsf3x+0x20>
 2f4:	e0 95       	com	r30
 2f6:	0b 2e       	mov	r0, r27
 2f8:	ba 2f       	mov	r27, r26
 2fa:	a0 2d       	mov	r26, r0
 2fc:	0b 01       	movw	r0, r22
 2fe:	b9 01       	movw	r22, r18
 300:	90 01       	movw	r18, r0
 302:	0c 01       	movw	r0, r24
 304:	ca 01       	movw	r24, r20
 306:	a0 01       	movw	r20, r0
 308:	11 24       	eor	r1, r1
 30a:	ff 27       	eor	r31, r31
 30c:	59 1b       	sub	r21, r25
 30e:	99 f0       	breq	.+38     	; 0x336 <__addsf3x+0x60>
 310:	59 3f       	cpi	r21, 0xF9	; 249
 312:	50 f4       	brcc	.+20     	; 0x328 <__addsf3x+0x52>
 314:	50 3e       	cpi	r21, 0xE0	; 224
 316:	68 f1       	brcs	.+90     	; 0x372 <__addsf3x+0x9c>
 318:	1a 16       	cp	r1, r26
 31a:	f0 40       	sbci	r31, 0x00	; 0
 31c:	a2 2f       	mov	r26, r18
 31e:	23 2f       	mov	r18, r19
 320:	34 2f       	mov	r19, r20
 322:	44 27       	eor	r20, r20
 324:	58 5f       	subi	r21, 0xF8	; 248
 326:	f3 cf       	rjmp	.-26     	; 0x30e <__addsf3x+0x38>
 328:	46 95       	lsr	r20
 32a:	37 95       	ror	r19
 32c:	27 95       	ror	r18
 32e:	a7 95       	ror	r26
 330:	f0 40       	sbci	r31, 0x00	; 0
 332:	53 95       	inc	r21
 334:	c9 f7       	brne	.-14     	; 0x328 <__addsf3x+0x52>
 336:	7e f4       	brtc	.+30     	; 0x356 <__addsf3x+0x80>
 338:	1f 16       	cp	r1, r31
 33a:	ba 0b       	sbc	r27, r26
 33c:	62 0b       	sbc	r22, r18
 33e:	73 0b       	sbc	r23, r19
 340:	84 0b       	sbc	r24, r20
 342:	ba f0       	brmi	.+46     	; 0x372 <__addsf3x+0x9c>
 344:	91 50       	subi	r25, 0x01	; 1
 346:	a1 f0       	breq	.+40     	; 0x370 <__addsf3x+0x9a>
 348:	ff 0f       	add	r31, r31
 34a:	bb 1f       	adc	r27, r27
 34c:	66 1f       	adc	r22, r22
 34e:	77 1f       	adc	r23, r23
 350:	88 1f       	adc	r24, r24
 352:	c2 f7       	brpl	.-16     	; 0x344 <__addsf3x+0x6e>
 354:	0e c0       	rjmp	.+28     	; 0x372 <__addsf3x+0x9c>
 356:	ba 0f       	add	r27, r26
 358:	62 1f       	adc	r22, r18
 35a:	73 1f       	adc	r23, r19
 35c:	84 1f       	adc	r24, r20
 35e:	48 f4       	brcc	.+18     	; 0x372 <__addsf3x+0x9c>
 360:	87 95       	ror	r24
 362:	77 95       	ror	r23
 364:	67 95       	ror	r22
 366:	b7 95       	ror	r27
 368:	f7 95       	ror	r31
 36a:	9e 3f       	cpi	r25, 0xFE	; 254
 36c:	08 f0       	brcs	.+2      	; 0x370 <__addsf3x+0x9a>
 36e:	b0 cf       	rjmp	.-160    	; 0x2d0 <__addsf3+0x28>
 370:	93 95       	inc	r25
 372:	88 0f       	add	r24, r24
 374:	08 f0       	brcs	.+2      	; 0x378 <__addsf3x+0xa2>
 376:	99 27       	eor	r25, r25
 378:	ee 0f       	add	r30, r30
 37a:	97 95       	ror	r25
 37c:	87 95       	ror	r24
 37e:	08 95       	ret

00000380 <__divsf3>:
 380:	0e 94 d4 01 	call	0x3a8	; 0x3a8 <__divsf3x>
 384:	0c 94 b5 02 	jmp	0x56a	; 0x56a <__fp_round>
 388:	0e 94 ae 02 	call	0x55c	; 0x55c <__fp_pscB>
 38c:	58 f0       	brcs	.+22     	; 0x3a4 <__divsf3+0x24>
 38e:	0e 94 a7 02 	call	0x54e	; 0x54e <__fp_pscA>
 392:	40 f0       	brcs	.+16     	; 0x3a4 <__divsf3+0x24>
 394:	29 f4       	brne	.+10     	; 0x3a0 <__divsf3+0x20>
 396:	5f 3f       	cpi	r21, 0xFF	; 255
 398:	29 f0       	breq	.+10     	; 0x3a4 <__divsf3+0x24>
 39a:	0c 94 9e 02 	jmp	0x53c	; 0x53c <__fp_inf>
 39e:	51 11       	cpse	r21, r1
 3a0:	0c 94 e9 02 	jmp	0x5d2	; 0x5d2 <__fp_szero>
 3a4:	0c 94 a4 02 	jmp	0x548	; 0x548 <__fp_nan>

000003a8 <__divsf3x>:
 3a8:	0e 94 c6 02 	call	0x58c	; 0x58c <__fp_split3>
 3ac:	68 f3       	brcs	.-38     	; 0x388 <__divsf3+0x8>

000003ae <__divsf3_pse>:
 3ae:	99 23       	and	r25, r25
 3b0:	b1 f3       	breq	.-20     	; 0x39e <__divsf3+0x1e>
 3b2:	55 23       	and	r21, r21
 3b4:	91 f3       	breq	.-28     	; 0x39a <__divsf3+0x1a>
 3b6:	95 1b       	sub	r25, r21
 3b8:	55 0b       	sbc	r21, r21
 3ba:	bb 27       	eor	r27, r27
 3bc:	aa 27       	eor	r26, r26
 3be:	62 17       	cp	r22, r18
 3c0:	73 07       	cpc	r23, r19
 3c2:	84 07       	cpc	r24, r20
 3c4:	38 f0       	brcs	.+14     	; 0x3d4 <__divsf3_pse+0x26>
 3c6:	9f 5f       	subi	r25, 0xFF	; 255
 3c8:	5f 4f       	sbci	r21, 0xFF	; 255
 3ca:	22 0f       	add	r18, r18
 3cc:	33 1f       	adc	r19, r19
 3ce:	44 1f       	adc	r20, r20
 3d0:	aa 1f       	adc	r26, r26
 3d2:	a9 f3       	breq	.-22     	; 0x3be <__divsf3_pse+0x10>
 3d4:	35 d0       	rcall	.+106    	; 0x440 <__EEPROM_REGION_LENGTH__+0x40>
 3d6:	0e 2e       	mov	r0, r30
 3d8:	3a f0       	brmi	.+14     	; 0x3e8 <__divsf3_pse+0x3a>
 3da:	e0 e8       	ldi	r30, 0x80	; 128
 3dc:	32 d0       	rcall	.+100    	; 0x442 <__EEPROM_REGION_LENGTH__+0x42>
 3de:	91 50       	subi	r25, 0x01	; 1
 3e0:	50 40       	sbci	r21, 0x00	; 0
 3e2:	e6 95       	lsr	r30
 3e4:	00 1c       	adc	r0, r0
 3e6:	ca f7       	brpl	.-14     	; 0x3da <__divsf3_pse+0x2c>
 3e8:	2b d0       	rcall	.+86     	; 0x440 <__EEPROM_REGION_LENGTH__+0x40>
 3ea:	fe 2f       	mov	r31, r30
 3ec:	29 d0       	rcall	.+82     	; 0x440 <__EEPROM_REGION_LENGTH__+0x40>
 3ee:	66 0f       	add	r22, r22
 3f0:	77 1f       	adc	r23, r23
 3f2:	88 1f       	adc	r24, r24
 3f4:	bb 1f       	adc	r27, r27
 3f6:	26 17       	cp	r18, r22
 3f8:	37 07       	cpc	r19, r23
 3fa:	48 07       	cpc	r20, r24
 3fc:	ab 07       	cpc	r26, r27
 3fe:	b0 e8       	ldi	r27, 0x80	; 128
 400:	09 f0       	breq	.+2      	; 0x404 <__EEPROM_REGION_LENGTH__+0x4>
 402:	bb 0b       	sbc	r27, r27
 404:	80 2d       	mov	r24, r0
 406:	bf 01       	movw	r22, r30
 408:	ff 27       	eor	r31, r31
 40a:	93 58       	subi	r25, 0x83	; 131
 40c:	5f 4f       	sbci	r21, 0xFF	; 255
 40e:	3a f0       	brmi	.+14     	; 0x41e <__EEPROM_REGION_LENGTH__+0x1e>
 410:	9e 3f       	cpi	r25, 0xFE	; 254
 412:	51 05       	cpc	r21, r1
 414:	78 f0       	brcs	.+30     	; 0x434 <__EEPROM_REGION_LENGTH__+0x34>
 416:	0c 94 9e 02 	jmp	0x53c	; 0x53c <__fp_inf>
 41a:	0c 94 e9 02 	jmp	0x5d2	; 0x5d2 <__fp_szero>
 41e:	5f 3f       	cpi	r21, 0xFF	; 255
 420:	e4 f3       	brlt	.-8      	; 0x41a <__EEPROM_REGION_LENGTH__+0x1a>
 422:	98 3e       	cpi	r25, 0xE8	; 232
 424:	d4 f3       	brlt	.-12     	; 0x41a <__EEPROM_REGION_LENGTH__+0x1a>
 426:	86 95       	lsr	r24
 428:	77 95       	ror	r23
 42a:	67 95       	ror	r22
 42c:	b7 95       	ror	r27
 42e:	f7 95       	ror	r31
 430:	9f 5f       	subi	r25, 0xFF	; 255
 432:	c9 f7       	brne	.-14     	; 0x426 <__EEPROM_REGION_LENGTH__+0x26>
 434:	88 0f       	add	r24, r24
 436:	91 1d       	adc	r25, r1
 438:	96 95       	lsr	r25
 43a:	87 95       	ror	r24
 43c:	97 f9       	bld	r25, 7
 43e:	08 95       	ret
 440:	e1 e0       	ldi	r30, 0x01	; 1
 442:	66 0f       	add	r22, r22
 444:	77 1f       	adc	r23, r23
 446:	88 1f       	adc	r24, r24
 448:	bb 1f       	adc	r27, r27
 44a:	62 17       	cp	r22, r18
 44c:	73 07       	cpc	r23, r19
 44e:	84 07       	cpc	r24, r20
 450:	ba 07       	cpc	r27, r26
 452:	20 f0       	brcs	.+8      	; 0x45c <__EEPROM_REGION_LENGTH__+0x5c>
 454:	62 1b       	sub	r22, r18
 456:	73 0b       	sbc	r23, r19
 458:	84 0b       	sbc	r24, r20
 45a:	ba 0b       	sbc	r27, r26
 45c:	ee 1f       	adc	r30, r30
 45e:	88 f7       	brcc	.-30     	; 0x442 <__EEPROM_REGION_LENGTH__+0x42>
 460:	e0 95       	com	r30
 462:	08 95       	ret

00000464 <__fixunssfsi>:
 464:	0e 94 ce 02 	call	0x59c	; 0x59c <__fp_splitA>
 468:	88 f0       	brcs	.+34     	; 0x48c <__fixunssfsi+0x28>
 46a:	9f 57       	subi	r25, 0x7F	; 127
 46c:	98 f0       	brcs	.+38     	; 0x494 <__fixunssfsi+0x30>
 46e:	b9 2f       	mov	r27, r25
 470:	99 27       	eor	r25, r25
 472:	b7 51       	subi	r27, 0x17	; 23
 474:	b0 f0       	brcs	.+44     	; 0x4a2 <__fixunssfsi+0x3e>
 476:	e1 f0       	breq	.+56     	; 0x4b0 <__fixunssfsi+0x4c>
 478:	66 0f       	add	r22, r22
 47a:	77 1f       	adc	r23, r23
 47c:	88 1f       	adc	r24, r24
 47e:	99 1f       	adc	r25, r25
 480:	1a f0       	brmi	.+6      	; 0x488 <__fixunssfsi+0x24>
 482:	ba 95       	dec	r27
 484:	c9 f7       	brne	.-14     	; 0x478 <__fixunssfsi+0x14>
 486:	14 c0       	rjmp	.+40     	; 0x4b0 <__fixunssfsi+0x4c>
 488:	b1 30       	cpi	r27, 0x01	; 1
 48a:	91 f0       	breq	.+36     	; 0x4b0 <__fixunssfsi+0x4c>
 48c:	0e 94 e8 02 	call	0x5d0	; 0x5d0 <__fp_zero>
 490:	b1 e0       	ldi	r27, 0x01	; 1
 492:	08 95       	ret
 494:	0c 94 e8 02 	jmp	0x5d0	; 0x5d0 <__fp_zero>
 498:	67 2f       	mov	r22, r23
 49a:	78 2f       	mov	r23, r24
 49c:	88 27       	eor	r24, r24
 49e:	b8 5f       	subi	r27, 0xF8	; 248
 4a0:	39 f0       	breq	.+14     	; 0x4b0 <__fixunssfsi+0x4c>
 4a2:	b9 3f       	cpi	r27, 0xF9	; 249
 4a4:	cc f3       	brlt	.-14     	; 0x498 <__fixunssfsi+0x34>
 4a6:	86 95       	lsr	r24
 4a8:	77 95       	ror	r23
 4aa:	67 95       	ror	r22
 4ac:	b3 95       	inc	r27
 4ae:	d9 f7       	brne	.-10     	; 0x4a6 <__fixunssfsi+0x42>
 4b0:	3e f4       	brtc	.+14     	; 0x4c0 <__fixunssfsi+0x5c>
 4b2:	90 95       	com	r25
 4b4:	80 95       	com	r24
 4b6:	70 95       	com	r23
 4b8:	61 95       	neg	r22
 4ba:	7f 4f       	sbci	r23, 0xFF	; 255
 4bc:	8f 4f       	sbci	r24, 0xFF	; 255
 4be:	9f 4f       	sbci	r25, 0xFF	; 255
 4c0:	08 95       	ret

000004c2 <__floatunsisf>:
 4c2:	e8 94       	clt
 4c4:	09 c0       	rjmp	.+18     	; 0x4d8 <__floatsisf+0x12>

000004c6 <__floatsisf>:
 4c6:	97 fb       	bst	r25, 7
 4c8:	3e f4       	brtc	.+14     	; 0x4d8 <__floatsisf+0x12>
 4ca:	90 95       	com	r25
 4cc:	80 95       	com	r24
 4ce:	70 95       	com	r23
 4d0:	61 95       	neg	r22
 4d2:	7f 4f       	sbci	r23, 0xFF	; 255
 4d4:	8f 4f       	sbci	r24, 0xFF	; 255
 4d6:	9f 4f       	sbci	r25, 0xFF	; 255
 4d8:	99 23       	and	r25, r25
 4da:	a9 f0       	breq	.+42     	; 0x506 <__floatsisf+0x40>
 4dc:	f9 2f       	mov	r31, r25
 4de:	96 e9       	ldi	r25, 0x96	; 150
 4e0:	bb 27       	eor	r27, r27
 4e2:	93 95       	inc	r25
 4e4:	f6 95       	lsr	r31
 4e6:	87 95       	ror	r24
 4e8:	77 95       	ror	r23
 4ea:	67 95       	ror	r22
 4ec:	b7 95       	ror	r27
 4ee:	f1 11       	cpse	r31, r1
 4f0:	f8 cf       	rjmp	.-16     	; 0x4e2 <__floatsisf+0x1c>
 4f2:	fa f4       	brpl	.+62     	; 0x532 <__floatsisf+0x6c>
 4f4:	bb 0f       	add	r27, r27
 4f6:	11 f4       	brne	.+4      	; 0x4fc <__floatsisf+0x36>
 4f8:	60 ff       	sbrs	r22, 0
 4fa:	1b c0       	rjmp	.+54     	; 0x532 <__floatsisf+0x6c>
 4fc:	6f 5f       	subi	r22, 0xFF	; 255
 4fe:	7f 4f       	sbci	r23, 0xFF	; 255
 500:	8f 4f       	sbci	r24, 0xFF	; 255
 502:	9f 4f       	sbci	r25, 0xFF	; 255
 504:	16 c0       	rjmp	.+44     	; 0x532 <__floatsisf+0x6c>
 506:	88 23       	and	r24, r24
 508:	11 f0       	breq	.+4      	; 0x50e <__floatsisf+0x48>
 50a:	96 e9       	ldi	r25, 0x96	; 150
 50c:	11 c0       	rjmp	.+34     	; 0x530 <__floatsisf+0x6a>
 50e:	77 23       	and	r23, r23
 510:	21 f0       	breq	.+8      	; 0x51a <__floatsisf+0x54>
 512:	9e e8       	ldi	r25, 0x8E	; 142
 514:	87 2f       	mov	r24, r23
 516:	76 2f       	mov	r23, r22
 518:	05 c0       	rjmp	.+10     	; 0x524 <__floatsisf+0x5e>
 51a:	66 23       	and	r22, r22
 51c:	71 f0       	breq	.+28     	; 0x53a <__floatsisf+0x74>
 51e:	96 e8       	ldi	r25, 0x86	; 134
 520:	86 2f       	mov	r24, r22
 522:	70 e0       	ldi	r23, 0x00	; 0
 524:	60 e0       	ldi	r22, 0x00	; 0
 526:	2a f0       	brmi	.+10     	; 0x532 <__floatsisf+0x6c>
 528:	9a 95       	dec	r25
 52a:	66 0f       	add	r22, r22
 52c:	77 1f       	adc	r23, r23
 52e:	88 1f       	adc	r24, r24
 530:	da f7       	brpl	.-10     	; 0x528 <__floatsisf+0x62>
 532:	88 0f       	add	r24, r24
 534:	96 95       	lsr	r25
 536:	87 95       	ror	r24
 538:	97 f9       	bld	r25, 7
 53a:	08 95       	ret

0000053c <__fp_inf>:
 53c:	97 f9       	bld	r25, 7
 53e:	9f 67       	ori	r25, 0x7F	; 127
 540:	80 e8       	ldi	r24, 0x80	; 128
 542:	70 e0       	ldi	r23, 0x00	; 0
 544:	60 e0       	ldi	r22, 0x00	; 0
 546:	08 95       	ret

00000548 <__fp_nan>:
 548:	9f ef       	ldi	r25, 0xFF	; 255
 54a:	80 ec       	ldi	r24, 0xC0	; 192
 54c:	08 95       	ret

0000054e <__fp_pscA>:
 54e:	00 24       	eor	r0, r0
 550:	0a 94       	dec	r0
 552:	16 16       	cp	r1, r22
 554:	17 06       	cpc	r1, r23
 556:	18 06       	cpc	r1, r24
 558:	09 06       	cpc	r0, r25
 55a:	08 95       	ret

0000055c <__fp_pscB>:
 55c:	00 24       	eor	r0, r0
 55e:	0a 94       	dec	r0
 560:	12 16       	cp	r1, r18
 562:	13 06       	cpc	r1, r19
 564:	14 06       	cpc	r1, r20
 566:	05 06       	cpc	r0, r21
 568:	08 95       	ret

0000056a <__fp_round>:
 56a:	09 2e       	mov	r0, r25
 56c:	03 94       	inc	r0
 56e:	00 0c       	add	r0, r0
 570:	11 f4       	brne	.+4      	; 0x576 <__fp_round+0xc>
 572:	88 23       	and	r24, r24
 574:	52 f0       	brmi	.+20     	; 0x58a <__fp_round+0x20>
 576:	bb 0f       	add	r27, r27
 578:	40 f4       	brcc	.+16     	; 0x58a <__fp_round+0x20>
 57a:	bf 2b       	or	r27, r31
 57c:	11 f4       	brne	.+4      	; 0x582 <__fp_round+0x18>
 57e:	60 ff       	sbrs	r22, 0
 580:	04 c0       	rjmp	.+8      	; 0x58a <__fp_round+0x20>
 582:	6f 5f       	subi	r22, 0xFF	; 255
 584:	7f 4f       	sbci	r23, 0xFF	; 255
 586:	8f 4f       	sbci	r24, 0xFF	; 255
 588:	9f 4f       	sbci	r25, 0xFF	; 255
 58a:	08 95       	ret

0000058c <__fp_split3>:
 58c:	57 fd       	sbrc	r21, 7
 58e:	90 58       	subi	r25, 0x80	; 128
 590:	44 0f       	add	r20, r20
 592:	55 1f       	adc	r21, r21
 594:	59 f0       	breq	.+22     	; 0x5ac <__fp_splitA+0x10>
 596:	5f 3f       	cpi	r21, 0xFF	; 255
 598:	71 f0       	breq	.+28     	; 0x5b6 <__fp_splitA+0x1a>
 59a:	47 95       	ror	r20

0000059c <__fp_splitA>:
 59c:	88 0f       	add	r24, r24
 59e:	97 fb       	bst	r25, 7
 5a0:	99 1f       	adc	r25, r25
 5a2:	61 f0       	breq	.+24     	; 0x5bc <__fp_splitA+0x20>
 5a4:	9f 3f       	cpi	r25, 0xFF	; 255
 5a6:	79 f0       	breq	.+30     	; 0x5c6 <__fp_splitA+0x2a>
 5a8:	87 95       	ror	r24
 5aa:	08 95       	ret
 5ac:	12 16       	cp	r1, r18
 5ae:	13 06       	cpc	r1, r19
 5b0:	14 06       	cpc	r1, r20
 5b2:	55 1f       	adc	r21, r21
 5b4:	f2 cf       	rjmp	.-28     	; 0x59a <__fp_split3+0xe>
 5b6:	46 95       	lsr	r20
 5b8:	f1 df       	rcall	.-30     	; 0x59c <__fp_splitA>
 5ba:	08 c0       	rjmp	.+16     	; 0x5cc <__fp_splitA+0x30>
 5bc:	16 16       	cp	r1, r22
 5be:	17 06       	cpc	r1, r23
 5c0:	18 06       	cpc	r1, r24
 5c2:	99 1f       	adc	r25, r25
 5c4:	f1 cf       	rjmp	.-30     	; 0x5a8 <__fp_splitA+0xc>
 5c6:	86 95       	lsr	r24
 5c8:	71 05       	cpc	r23, r1
 5ca:	61 05       	cpc	r22, r1
 5cc:	08 94       	sec
 5ce:	08 95       	ret

000005d0 <__fp_zero>:
 5d0:	e8 94       	clt

000005d2 <__fp_szero>:
 5d2:	bb 27       	eor	r27, r27
 5d4:	66 27       	eor	r22, r22
 5d6:	77 27       	eor	r23, r23
 5d8:	cb 01       	movw	r24, r22
 5da:	97 f9       	bld	r25, 7
 5dc:	08 95       	ret

000005de <__mulsf3>:
 5de:	0e 94 02 03 	call	0x604	; 0x604 <__mulsf3x>
 5e2:	0c 94 b5 02 	jmp	0x56a	; 0x56a <__fp_round>
 5e6:	0e 94 a7 02 	call	0x54e	; 0x54e <__fp_pscA>
 5ea:	38 f0       	brcs	.+14     	; 0x5fa <__mulsf3+0x1c>
 5ec:	0e 94 ae 02 	call	0x55c	; 0x55c <__fp_pscB>
 5f0:	20 f0       	brcs	.+8      	; 0x5fa <__mulsf3+0x1c>
 5f2:	95 23       	and	r25, r21
 5f4:	11 f0       	breq	.+4      	; 0x5fa <__mulsf3+0x1c>
 5f6:	0c 94 9e 02 	jmp	0x53c	; 0x53c <__fp_inf>
 5fa:	0c 94 a4 02 	jmp	0x548	; 0x548 <__fp_nan>
 5fe:	11 24       	eor	r1, r1
 600:	0c 94 e9 02 	jmp	0x5d2	; 0x5d2 <__fp_szero>

00000604 <__mulsf3x>:
 604:	0e 94 c6 02 	call	0x58c	; 0x58c <__fp_split3>
 608:	70 f3       	brcs	.-36     	; 0x5e6 <__mulsf3+0x8>

0000060a <__mulsf3_pse>:
 60a:	95 9f       	mul	r25, r21
 60c:	c1 f3       	breq	.-16     	; 0x5fe <__mulsf3+0x20>
 60e:	95 0f       	add	r25, r21
 610:	50 e0       	ldi	r21, 0x00	; 0
 612:	55 1f       	adc	r21, r21
 614:	62 9f       	mul	r22, r18
 616:	f0 01       	movw	r30, r0
 618:	72 9f       	mul	r23, r18
 61a:	bb 27       	eor	r27, r27
 61c:	f0 0d       	add	r31, r0
 61e:	b1 1d       	adc	r27, r1
 620:	63 9f       	mul	r22, r19
 622:	aa 27       	eor	r26, r26
 624:	f0 0d       	add	r31, r0
 626:	b1 1d       	adc	r27, r1
 628:	aa 1f       	adc	r26, r26
 62a:	64 9f       	mul	r22, r20
 62c:	66 27       	eor	r22, r22
 62e:	b0 0d       	add	r27, r0
 630:	a1 1d       	adc	r26, r1
 632:	66 1f       	adc	r22, r22
 634:	82 9f       	mul	r24, r18
 636:	22 27       	eor	r18, r18
 638:	b0 0d       	add	r27, r0
 63a:	a1 1d       	adc	r26, r1
 63c:	62 1f       	adc	r22, r18
 63e:	73 9f       	mul	r23, r19
 640:	b0 0d       	add	r27, r0
 642:	a1 1d       	adc	r26, r1
 644:	62 1f       	adc	r22, r18
 646:	83 9f       	mul	r24, r19
 648:	a0 0d       	add	r26, r0
 64a:	61 1d       	adc	r22, r1
 64c:	22 1f       	adc	r18, r18
 64e:	74 9f       	mul	r23, r20
 650:	33 27       	eor	r19, r19
 652:	a0 0d       	add	r26, r0
 654:	61 1d       	adc	r22, r1
 656:	23 1f       	adc	r18, r19
 658:	84 9f       	mul	r24, r20
 65a:	60 0d       	add	r22, r0
 65c:	21 1d       	adc	r18, r1
 65e:	82 2f       	mov	r24, r18
 660:	76 2f       	mov	r23, r22
 662:	6a 2f       	mov	r22, r26
 664:	11 24       	eor	r1, r1
 666:	9f 57       	subi	r25, 0x7F	; 127
 668:	50 40       	sbci	r21, 0x00	; 0
 66a:	9a f0       	brmi	.+38     	; 0x692 <__mulsf3_pse+0x88>
 66c:	f1 f0       	breq	.+60     	; 0x6aa <__mulsf3_pse+0xa0>
 66e:	88 23       	and	r24, r24
 670:	4a f0       	brmi	.+18     	; 0x684 <__mulsf3_pse+0x7a>
 672:	ee 0f       	add	r30, r30
 674:	ff 1f       	adc	r31, r31
 676:	bb 1f       	adc	r27, r27
 678:	66 1f       	adc	r22, r22
 67a:	77 1f       	adc	r23, r23
 67c:	88 1f       	adc	r24, r24
 67e:	91 50       	subi	r25, 0x01	; 1
 680:	50 40       	sbci	r21, 0x00	; 0
 682:	a9 f7       	brne	.-22     	; 0x66e <__mulsf3_pse+0x64>
 684:	9e 3f       	cpi	r25, 0xFE	; 254
 686:	51 05       	cpc	r21, r1
 688:	80 f0       	brcs	.+32     	; 0x6aa <__mulsf3_pse+0xa0>
 68a:	0c 94 9e 02 	jmp	0x53c	; 0x53c <__fp_inf>
 68e:	0c 94 e9 02 	jmp	0x5d2	; 0x5d2 <__fp_szero>
 692:	5f 3f       	cpi	r21, 0xFF	; 255
 694:	e4 f3       	brlt	.-8      	; 0x68e <__mulsf3_pse+0x84>
 696:	98 3e       	cpi	r25, 0xE8	; 232
 698:	d4 f3       	brlt	.-12     	; 0x68e <__mulsf3_pse+0x84>
 69a:	86 95       	lsr	r24
 69c:	77 95       	ror	r23
 69e:	67 95       	ror	r22
 6a0:	b7 95       	ror	r27
 6a2:	f7 95       	ror	r31
 6a4:	e7 95       	ror	r30
 6a6:	9f 5f       	subi	r25, 0xFF	; 255
 6a8:	c1 f7       	brne	.-16     	; 0x69a <__mulsf3_pse+0x90>
 6aa:	fe 2b       	or	r31, r30
 6ac:	88 0f       	add	r24, r24
 6ae:	91 1d       	adc	r25, r1
 6b0:	96 95       	lsr	r25
 6b2:	87 95       	ror	r24
 6b4:	97 f9       	bld	r25, 7
 6b6:	08 95       	ret

000006b8 <_exit>:
 6b8:	f8 94       	cli

000006ba <__stop_program>:
 6ba:	ff cf       	rjmp	.-2      	; 0x6ba <__stop_program>
